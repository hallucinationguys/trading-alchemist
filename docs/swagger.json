{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A modern Go-based authentication system with magic link functionality using Clean Architecture principles.\nThis API provides secure authentication mechanisms including magic link authentication, JWT token management, and user profile management.",
        "title": "Trading Alchemist API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Trading Alchemist Team",
            "email": "team@tradingalchemist.dev"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/magic-link": {
            "post": {
                "description": "Sends a magic link to the specified email address for passwordless authentication. The magic link will be valid for the configured TTL period (default 15 minutes).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Send magic link",
                "parameters": [
                    {
                        "description": "Email address to send magic link to",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.SendMagicLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Magic link sent successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.SendMagicLinkResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid email address or validation error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Verifies a magic link token from an email link and returns a JWT access token if valid. The magic link token is consumed and cannot be used again.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify magic link",
                "parameters": [
                    {
                        "description": "Magic link token to verify",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.VerifyMagicLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Magic link verified successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.VerifyMagicLinkResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid token format or token missing",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid, expired, or already used token",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/conversations": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a paginated list of active conversations for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get user's conversations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of conversations to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversations retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/trading-alchemist_internal_application_dto.ConversationSummaryResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new chat session for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Create a new conversation",
                "parameters": [
                    {
                        "description": "Conversation creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.CreateConversationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Conversation created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.ConversationDetailResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/conversations/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves the full details of a single conversation, including its messages, for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get conversation details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation details retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.ConversationDetailResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID format",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own this conversation",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/conversations/{id}/messages": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sends a message to a conversation and streams the LLM's response back using Server-Sent Events (SSE).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Post a message and get a streaming response",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message content",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.PostMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "text/event-stream response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or ID format",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own this conversation",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the current health status of the API. This endpoint can be used for monitoring and load balancer health checks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_presentation_http_handlers.HealthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a list of all active LLM providers supported by the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "List available providers",
                "responses": {
                    "200": {
                        "description": "Providers retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/trading-alchemist_internal_application_dto.ProviderResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/providers/available-models": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all available models with their API key configuration status in a single optimized call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "Get available models with API key status",
                "responses": {
                    "200": {
                        "description": "Available models retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/trading-alchemist_internal_application_dto.ProviderResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/providers/settings": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all provider settings for the currently authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "List user's provider settings",
                "responses": {
                    "200": {
                        "description": "User provider settings retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/trading-alchemist_internal_application_dto.UserProviderSettingResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates or updates a provider setting (API key, base URL) for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "Create or update a provider setting",
                "parameters": [
                    {
                        "description": "Provider setting information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UpsertUserProviderSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider setting saved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UserProviderSettingResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tools": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a list of all active tools that can be used by the LLM. Can be filtered by provider.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get available tools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter tools by a specific provider ID",
                        "name": "provider_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tools retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/trading-alchemist_internal_application_dto.ToolResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves the profile information for the currently authenticated user. Requires valid JWT token in Authorization header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.GetUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the profile information for the currently authenticated user. Only provided fields will be updated (partial update).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "User profile information to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UpdateUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request data or validation error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_presentation_http_handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Service status\nexample: ok",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Current timestamp\nexample: 2023-12-01T10:00:00Z",
                    "type": "string"
                },
                "uptime": {
                    "description": "Service uptime (optional)\nexample: 24h30m",
                    "type": "string"
                },
                "version": {
                    "description": "API version\nexample: 1.0.0",
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.ArtifactResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.ConversationDetailResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trading-alchemist_internal_application_dto.MessageResponse"
                    }
                },
                "model_id": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.ConversationSummaryResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "last_message_at": {
                    "type": "string"
                },
                "model_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.CreateArtifactRequest": {
            "type": "object",
            "required": [
                "content",
                "title",
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.CreateConversationRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "model_name": {
                    "description": "e.g., \"gpt-4o-mini\". Defaults to a system-wide default if not provided.",
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "trading-alchemist_internal_application_dto.GetUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "User information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UserResponse"
                        }
                    ]
                }
            }
        },
        "trading-alchemist_internal_application_dto.JSONB": {
            "type": "object",
            "additionalProperties": true
        },
        "trading-alchemist_internal_application_dto.MessageResponse": {
            "type": "object",
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trading-alchemist_internal_application_dto.ArtifactResponse"
                    }
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.ModelResponse": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "description": "Example: [\"LLM\", \"CHAT\", \"200K\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "trading-alchemist_internal_application_dto.PostMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trading-alchemist_internal_application_dto.CreateArtifactRequest"
                    }
                },
                "content": {
                    "type": "string"
                },
                "model_id": {
                    "description": "Optional: use specific model for this message",
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.ProviderResponse": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trading-alchemist_internal_application_dto.ModelResponse"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.SendMagicLinkRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "description": "Email address to send the magic link to",
                    "type": "string"
                },
                "purpose": {
                    "description": "Purpose of the magic link (login, email_verification, password_reset)",
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.SendMagicLinkResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Response message",
                    "type": "string"
                },
                "sent": {
                    "description": "Whether the email was sent successfully",
                    "type": "boolean"
                }
            }
        },
        "trading-alchemist_internal_application_dto.ToolResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "$ref": "#/definitions/trading-alchemist_internal_application_dto.JSONB"
                }
            }
        },
        "trading-alchemist_internal_application_dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "description": "Avatar URL",
                    "type": "string"
                },
                "first_name": {
                    "description": "First name (1-100 characters)",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "last_name": {
                    "description": "Last name (1-100 characters)",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "trading-alchemist_internal_application_dto.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "Updated user information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UserResponse"
                        }
                    ]
                }
            }
        },
        "trading-alchemist_internal_application_dto.UpsertUserProviderSettingRequest": {
            "type": "object",
            "required": [
                "api_key",
                "provider_id"
            ],
            "properties": {
                "api_base_override": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.UserProviderSettingResponse": {
            "type": "object",
            "properties": {
                "api_base_override": {
                    "type": "string"
                },
                "api_key_set": {
                    "description": "Indicates if the API key is configured, without exposing the key.",
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "provider_display_name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "provider_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.UserResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "description": "Avatar URL",
                    "type": "string"
                },
                "created_at": {
                    "description": "Account creation timestamp",
                    "type": "string"
                },
                "display_name": {
                    "description": "Display name",
                    "type": "string"
                },
                "email": {
                    "description": "Email address",
                    "type": "string"
                },
                "email_verified": {
                    "description": "Whether email is verified",
                    "type": "boolean"
                },
                "first_name": {
                    "description": "First name",
                    "type": "string"
                },
                "full_name": {
                    "description": "Full name (computed from first and last name)",
                    "type": "string"
                },
                "id": {
                    "description": "User ID",
                    "type": "string"
                },
                "is_active": {
                    "description": "Whether user is active",
                    "type": "boolean"
                },
                "last_name": {
                    "description": "Last name",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Last update timestamp",
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.VerifyMagicLinkRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "description": "Magic link token to verify",
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_application_dto.VerifyMagicLinkResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "JWT access token",
                    "type": "string"
                },
                "expires_in": {
                    "description": "Token expiration in seconds",
                    "type": "integer"
                },
                "token_type": {
                    "description": "Token type",
                    "type": "string"
                },
                "user": {
                    "description": "User information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/trading-alchemist_internal_application_dto.UserResponse"
                        }
                    ]
                }
            }
        },
        "trading-alchemist_internal_presentation_responses.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code\nexample: VALIDATION_ERROR",
                    "type": "string"
                },
                "details": {
                    "description": "Optional error details\nexample: The email field must be a valid email address",
                    "type": "string"
                },
                "message": {
                    "description": "Error message\nexample: Invalid email address",
                    "type": "string"
                }
            }
        },
        "trading-alchemist_internal_presentation_responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/trading-alchemist_internal_presentation_responses.ErrorDetail"
                        }
                    ]
                },
                "success": {
                    "description": "Success indicator (always false for errors)\nexample: false",
                    "type": "boolean"
                }
            }
        },
        "trading-alchemist_internal_presentation_responses.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data"
                },
                "message": {
                    "description": "Optional success message\nexample: Operation completed successfully",
                    "type": "string"
                },
                "success": {
                    "description": "Success indicator\nexample: true",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "JWT token. Usage: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}